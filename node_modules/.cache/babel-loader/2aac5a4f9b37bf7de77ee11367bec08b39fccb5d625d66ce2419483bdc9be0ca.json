{"ast":null,"code":"function fade() {\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      console.log(entry);\n      if (entry.isIntersecting) {\n        entry.target.classList.add(\"show\");\n      } else {\n        entry.target.classList.remove(\"show\");\n      }\n    });\n  });\n  const hiddenElements = document.querySelectorAll(\".hidden\");\n  hiddenElements.forEach(el => observer.observe(el));\n}\nexport default fade;","map":{"version":3,"names":["fade","observer","IntersectionObserver","entries","forEach","entry","console","log","isIntersecting","target","classList","add","remove","hiddenElements","document","querySelectorAll","el","observe"],"sources":["/Users/agustinus/Documents/Project/personalsite/src/components/effect/effect.js"],"sourcesContent":["\nfunction fade() {\n\nconst observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      console.log(entry)\n      if (entry.isIntersecting) {\n        entry.target.classList.add(\"show\");\n      } else {\n        entry.target.classList.remove(\"show\");\n      }\n    })\n  } )\n  \n  const hiddenElements = document.querySelectorAll(\".hidden\");\n  hiddenElements.forEach((el)=> observer.observe(el));\n\n}\n\nexport default fade;"],"mappings":"AACA,SAASA,IAAI,GAAG;EAEhB,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;IACnDA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;MACzBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,IAAIA,KAAK,CAACG,cAAc,EAAE;QACxBH,KAAK,CAACI,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MACpC,CAAC,MAAM;QACLN,KAAK,CAACI,MAAM,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;MACvC;IACF,CAAC,CAAC;EACJ,CAAC,CAAE;EAEH,MAAMC,cAAc,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,CAAC;EAC3DF,cAAc,CAACT,OAAO,CAAEY,EAAE,IAAIf,QAAQ,CAACgB,OAAO,CAACD,EAAE,CAAC,CAAC;AAErD;AAEA,eAAehB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}